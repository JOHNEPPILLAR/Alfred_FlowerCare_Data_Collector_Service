name: CI

on: [push]

jobs:
  security:
    name: üõ°Ô∏è Check for vulnerabilities
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout repo
        uses: actions/checkout@master

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Slack Notification on failure
        if: failure()
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: github_builds
          SLACK_USERNAME: 'Github CI'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON: https://avatars2.githubusercontent.com/u/25100863?s=40&v=4
          SLACK_TITLE: Build status
          SLACK_MESSAGE: 'üõ°Ô∏è Scan found vulnerabilities'
          SLACK_COLOR: '#ff0000'

  build:
    name: üõ† Build and publish to private registery
    runs-on: ubuntu-latest
    steps:
      - name: Add private registery to docker deamon
        if: success()
        run: |
          echo "{ \"insecure-registries\": [\"${{ secrets.DOCKER_REGISTERY_URL }}\"] }" | sudo tee /etc/docker/daemon.json
          sudo service docker restart

      - name: Login to private registery
        if: success()
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ${{ secrets.DOCKER_REGISTERY_URL }} -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Checkout repo
        if: success()
        uses: actions/checkout@master

      - name: Build docker container
        if: success()
        run: docker build . -t ${{ secrets.DOCKER_REGISTERY_URL }}/alfred_flowercare_data_collector_service:intel

      - name: Push docker container to private registery
        if: success()
        run: docker push ${{ secrets.DOCKER_REGISTERY_URL }}/alfred_flowercare_data_collector_service:intel

      - name: Slack Notification on failure
        if: failure()
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: github_builds
          SLACK_USERNAME: 'Github CI'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON: https://avatars2.githubusercontent.com/u/25100863?s=40&v=4
          SLACK_TITLE: Build status
          SLACK_MESSAGE: 'Build failed  :bangbang:'
          SLACK_COLOR: '#ff0000'

      - name: Slack Notification on sucess
        if: success()
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: github_builds
          SLACK_USERNAME: 'Github CI'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON: https://avatars2.githubusercontent.com/u/25100863?s=40&v=4
          SLACK_TITLE: Build status
          SLACK_MESSAGE: 'Build passed  :rocket:'
