name: CI

on: [push]

jobs:
  security:
    name: üõ°Ô∏è Check for vulnerabilities
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Slack Notification on failure
        if: failure()
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: github_builds
          SLACK_USERNAME: 'Github CI'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON: https://avatars2.githubusercontent.com/u/25100863?s=40&v=4
          SLACK_TITLE: Build status
          SLACK_MESSAGE: 'üõ°Ô∏è Scan found vulnerabilities'
          SLACK_COLOR: '#ff0000'

  node:
    name: üìù Setup node & check packages install ok
    runs-on: ubuntu-latest
    steps:
      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .node-version)"
        id: nvm

      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'

      - name: NPM Install
        run: npm install
        env:
          CI: true

  build:
    name: üõ† Build and push docker containers
    runs-on: ubuntu-latest
    needs: [security, node]
    steps:
      - uses: actions/checkout@master
      - name: Add private registery to docker deamon
        run: |
          echo "{ \"insecure-registries\": [\"${{ secrets.DOCKER_REGISTERY_URL }}\"] }" | sudo tee /etc/docker/daemon.json
          sudo service docker restart

      - name: Login to docker registery
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ${{ secrets.DOCKER_REGISTERY_URL }} -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build on intel & push docker container to registry
        if: success()
        run: |
          docker build . -t ${{ secrets.DOCKER_REGISTERY_URL }}/alfred_flowercare_data_collector_service
          docker push ${{ secrets.DOCKER_REGISTERY_URL }}/alfred_flowercare_data_collector_service

      - name: Build on arm & push docker container to registry
        if: success()
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest
        env:
          DOCKER_TARGET_PLATFORM: linux/arm64
        run: |
          docker buildx build \
          --platform ${DOCKER_TARGET_PLATFORM} \
          --tag ${{ secrets.DOCKER_REGISTERY_URL }}/alfred_flowercare_data_collector_service_rpi \
          --file ./Dockerfile \
          --output type=image,push=true .

      - name: Slack Notification on failure
        if: failure()
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: github_builds
          SLACK_USERNAME: 'Github CI'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON: https://avatars2.githubusercontent.com/u/25100863?s=40&v=4
          SLACK_TITLE: Build status
          SLACK_MESSAGE: 'Build failed  :bangbang:'
          SLACK_COLOR: '#ff0000'

    bumpver:
      name: üèÅ Finish build process
      runs-on: ubuntu-latest
      needs: [build]
      steps:
        - name: Automated Version Bump
          uses: phips28/gh-action-bump-version@master
          with:
            tag-prefix: ''
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        - name: Slack Notification on sucess
          if: success()
          uses: rtCamp/action-slack-notify@master
          env:
            SLACK_CHANNEL: github_builds
            SLACK_USERNAME: 'Github CI'
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
            SLACK_ICON: https://avatars2.githubusercontent.com/u/25100863?s=40&v=4
            SLACK_TITLE: Build status
            SLACK_MESSAGE: 'Build passed  :rocket:'
